		T 56 K 	[- директива IO2 установка адреса загрузки]
		G K 	[- директива IO2 фиксация начального адреса подпрограмы]
[0:]	A 3 F	[-  формирование кода инструкции возврата в аккумуляторе]
[1:]	T 53 @	[- запись инструкции возврата]
[2:]	A 1 F	[- добавление ячейки с исходным числом в аккумулятор, 1 - ячейка с исходным числом]
[3:]	E 8 @	[- Если знак в аккумуляторе положительный, перейти в позицию проверки старшего разрада, 8 - адрес проверки старшего разряда]
[IF]
[4:]	T 300 F	[- Очистка аккумулятора]
[5:]	A 54 @	[- Добавление в аккумулятор константы со знаком минус, 54 - константа со знаком минус]
[6:]	T 250 F	[- Перемещаю содержимое аккумулятора в ячейку памяти 250 (знаковый разряд)]
[7:]	S 1 F	[- превращаю отрицательное число в положительное]
[ENDIF]

[--------------------------------------------]

[8:]	U 1 F	[- Переносим содержимое аккумулятора в ячейку 1
[9:]	S 55 @	[- вычитаю из аккумулятора константу 10000, где 55 - константа 10000]
[10:]	G 17 @	[- если знак аккумулятора отрицательный переходим в ячейку 17]
[IF]
[11:]	T 1 F	[- Переносим содержимое аккумулятора в ячейку 1]
[12:]	A 251 F	[- Переносим содержимое старшего разряда в аккумулятор]
[13:]	A 59 @	[- Прибавляем к аккумулятору константу 1 из ячейки 59]
[14:]	T 251 F	[- Переносим содержимое аккумулятора в старший разряд]
[15:]	A 1 F	[- Возвращаем число после вычитания в аккумулятор]
[16:]	E 8 @	[- Переходим к проверке старшего разряда]
[ENDIF]

[--------------------------------------------]

[17:]	T 300 F	[- очистка аккумулятора]
[18:]	A 1 F	[- возвращаем состояния числа до вычитания]
[19:]	U 1 F	[- Переносим содержимое аккумулятора в ячейку 1]
[20:]	S 56 @	[- вычитаем из аккумулятора константу 1000, где 56 - константа 1000]
[21:]	G 28 @	[- если знак аккумулятора отрицательный то переходим в ячейку 28]
[IF]
[22:]	T 1 F	[- Переносим содержимое аккумулятора в ячейку 1]
[23:]	A 252 F	[- Переносим содержимое 3 разряда в аккумулятор]
[24:]	A 59 @	[- Прибавляем к аккумулятору константу 1 из ячейки 59]
[25:]	T 252 F	[- Переносим содержимое аккумулятора в 3 разряд]
[26:]	A 1 F	[- Возвращаем число после вычитания в аккумулятор]
[27:]	E 19 @	[- Переходим к проверке 3 разряда]
[ENDIF]

[--------------------------------------------]

[28:]	T 300 F	[- очистка аккумулятора]
[29:]	A 1 F	[- возвращение состояния числа до вычитания]
[30:]	U 1 F	[- Переносим содержимое аккумулятора в ячейку 1]
[31:]	S 57 @	[- вычитаю из аккумулятора константу 100, где 57 - константа 100]
[32:]	G 39 @	[- если знак аккумулятора отрицательный, то перехожу в ячейку 39]
[IF]
[33:]	T 1 F	[- Переносим содержимое аккумулятора в ячейку 1]
[34:]	A 253 F	[- Переносим содержимое 2 разряда в аккумулятор]
[35:]	A 59 @	[- Прибавляем к аккумулятору константу 1 из ячейки 59]
[36:]	T 253 F	[- Переносим содержимое аккумулятора в 2 разряд]
[37:]	A 1 F	[- Возвращаем число после вычитания в аккумулятор]
[38:]	E 30 @	[- Переходим к проверке 2 разряда]
[ENDIF]

[--------------------------------------------]

[39:]	T 300 F	[- очистка аккумулятора]
[40:]	A 1 F	[- возвращение состояния числа до вычитания]
[41:]	U 1 F	[- Переносим содержимое аккумулятора в ячейку 1]
[42:]	S 58 @	[- вычитаю из аккумулятора константу 10, где 58 - константа 10]
[43:]	G 50 @	[- если знак аккумулятора отрицательный, то перехожу в ячейку 50]
[IF]
[44:]	T 1 F	[- Переносим содержимое аккумулятора в ячейку 1]
[45:]	A 254 F	[- Переносим содержимое 1 разряда в аккумулятор]
[46:]	A 59 @	[- Прибавляем к аккумулятору константу 1 из ячейки 59]
[47:]	T 254 F	[- Переносим содержимое аккумулятора в 2 разряд]
[48:]	A 1 F	[- Возвращаем число после вычитания в аккумулятор]
[49:]	E 41 @	[- Переходим к проверке 1 разряда]
[ENDIF]

[--------------------------------------------]

[50:]	T 300 F	[- очистка аккумулятора]
[51:]	A 1 F	[- возвращение состояния числа до вычитания]
[52:]	T 255 F	[- Переношу значение младшего разряда в ячейку 255

[53:]	E 0 F	[эпилог: инструкция возврата из подпрограммы]

[54:]	P 0 D		[- константа минус]
[55:]	P 5000 F	[- константа 10000]
[56:]	P 500 F		[- константа 1000]
[57:]	P 50 F		[- константа 100]
[58:]	P 5 F		[- константа 10]
[59:]	P 0 D		[- константа 1]

		G K 	[- директива IO2, фиксация начального адреса программы]
[0:]	A 5 @	[- загрузка в аккумулятор исходного числа]
[1:]	T 1 F	[- запись исходного числа в ячейку 1]
[2:]	A 2 @	[- вызов]
[3:]	G 56 F	[- подпрограммы]
[4:]	Z F		[- остановка]
[5:]	P 64867 D	[- исходное число -1337]
		EZ PF

